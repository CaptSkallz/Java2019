import static org.junit.Assert.*;

import org.junit.BeforeClass;
import org.junit.Test;
//import LISTTestScoring.LISTTestScoring;

public class TestPalindrom {
	/*
	private static LISTTestScoring scoring = null;

	@BeforeClass
	public static void initScoring() {
		scoring = new LISTTestScoring();
		scoring.setScore("lang:common_list_test_scoring_name", 0, 6);
	}
	*/

	@Test
	public void testJePalindrom() {
		assertEquals("jePalindrom(\"1001100\")", false, Palindrom.jePalindrom("1001100"));
		assertEquals("jePalindrom(\"111100\")", false, Palindrom.jePalindrom("111100"));
		assertEquals("jePalindrom(\"1100011\")", true, Palindrom.jePalindrom("1100011"));
		assertEquals("jePalindrom(\"1000101\")", false, Palindrom.jePalindrom("1000101"));
		assertEquals("jePalindrom(\"1010100\")", false, Palindrom.jePalindrom("1010100"));
		assertEquals("jePalindrom(\"1010100\")", false, Palindrom.jePalindrom("1010100"));
		assertEquals("jePalindrom(\"10011\")", false, Palindrom.jePalindrom("10011"));
		assertEquals("jePalindrom(\"110011\")", true, Palindrom.jePalindrom("110011"));
		assertEquals("jePalindrom(\"100000\")", false, Palindrom.jePalindrom("100000"));
		assertEquals("jePalindrom(\"11\")", true, Palindrom.jePalindrom("11"));
		assertEquals("jePalindrom(\"110001\")", false, Palindrom.jePalindrom("110001"));
		assertEquals("jePalindrom(\"11010\")", false, Palindrom.jePalindrom("11010"));
		assertEquals("jePalindrom(\"11100\")", false, Palindrom.jePalindrom("11100"));
		assertEquals("jePalindrom(\"11101\")", false, Palindrom.jePalindrom("11101"));
		assertEquals("jePalindrom(\"1000111\")", false, Palindrom.jePalindrom("1000111"));
		assertEquals("jePalindrom(\"1001\")", true, Palindrom.jePalindrom("1001"));
		assertEquals("jePalindrom(\"10000\")", false, Palindrom.jePalindrom("10000"));
		assertEquals("jePalindrom(\"110111\")", false, Palindrom.jePalindrom("110111"));
		assertEquals("jePalindrom(\"111011\")", false, Palindrom.jePalindrom("111011"));
		assertEquals("jePalindrom(\"111000\")", false, Palindrom.jePalindrom("111000"));
		assertEquals("jePalindrom(\"11001\")", false, Palindrom.jePalindrom("11001"));
		assertEquals("jePalindrom(\"10011\")", false, Palindrom.jePalindrom("10011"));
		assertEquals("jePalindrom(\"11001\")", false, Palindrom.jePalindrom("11001"));
		assertEquals("jePalindrom(\"1000101\")", false, Palindrom.jePalindrom("1000101"));
		assertEquals("jePalindrom(\"1011000\")", false, Palindrom.jePalindrom("1011000"));
		assertEquals("jePalindrom(\"1011010\")", false, Palindrom.jePalindrom("1011010"));
		assertEquals("jePalindrom(\"10\")", false, Palindrom.jePalindrom("10"));
		assertEquals("jePalindrom(\"100000\")", false, Palindrom.jePalindrom("100000"));
		assertEquals("jePalindrom(\"11001\")", false, Palindrom.jePalindrom("11001"));
		assertEquals("jePalindrom(\"1010010\")", false, Palindrom.jePalindrom("1010010"));
		assertEquals("jePalindrom(\"110100\")", false, Palindrom.jePalindrom("110100"));
		assertEquals("jePalindrom(\"101000\")", false, Palindrom.jePalindrom("101000"));
		assertEquals("jePalindrom(\"11000\")", false, Palindrom.jePalindrom("11000"));
		assertEquals("jePalindrom(\"1100\")", false, Palindrom.jePalindrom("1100"));
		assertEquals("jePalindrom(\"11010\")", false, Palindrom.jePalindrom("11010"));
		assertEquals("jePalindrom(\"10101\")", true, Palindrom.jePalindrom("10101"));
		assertEquals("jePalindrom(\"1011101\")", true, Palindrom.jePalindrom("1011101"));
		assertEquals("jePalindrom(\"101000\")", false, Palindrom.jePalindrom("101000"));
		assertEquals("jePalindrom(\"11010\")", false, Palindrom.jePalindrom("11010"));
		assertEquals("jePalindrom(\"111111\")", true, Palindrom.jePalindrom("111111"));
		assertEquals("jePalindrom(\"1100010\")", false, Palindrom.jePalindrom("1100010"));
		assertEquals("jePalindrom(\"11000\")", false, Palindrom.jePalindrom("11000"));
		assertEquals("jePalindrom(\"111010\")", false, Palindrom.jePalindrom("111010"));
		assertEquals("jePalindrom(\"1011101\")", true, Palindrom.jePalindrom("1011101"));
		assertEquals("jePalindrom(\"1000110\")", false, Palindrom.jePalindrom("1000110"));
		assertEquals("jePalindrom(\"1011\")", false, Palindrom.jePalindrom("1011"));
		assertEquals("jePalindrom(\"1011001\")", false, Palindrom.jePalindrom("1011001"));
		assertEquals("jePalindrom(\"1010100\")", false, Palindrom.jePalindrom("1010100"));
		assertEquals("jePalindrom(\"1100000\")", false, Palindrom.jePalindrom("1100000"));
		assertEquals("jePalindrom(\"1011110\")", false, Palindrom.jePalindrom("1011110"));
		assertEquals("jePalindrom(\"101100\")", false, Palindrom.jePalindrom("101100"));
		assertEquals("jePalindrom(\"101111\")", false, Palindrom.jePalindrom("101111"));
		assertEquals("jePalindrom(\"111111\")", true, Palindrom.jePalindrom("111111"));
		assertEquals("jePalindrom(\"1011111\")", false, Palindrom.jePalindrom("1011111"));
		assertEquals("jePalindrom(\"1010110\")", false, Palindrom.jePalindrom("1010110"));
		assertEquals("jePalindrom(\"1010011\")", false, Palindrom.jePalindrom("1010011"));
		assertEquals("jePalindrom(\"100001\")", true, Palindrom.jePalindrom("100001"));
		assertEquals("jePalindrom(\"10\")", false, Palindrom.jePalindrom("10"));
		assertEquals("jePalindrom(\"110000\")", false, Palindrom.jePalindrom("110000"));
		assertEquals("jePalindrom(\"10111\")", false, Palindrom.jePalindrom("10111"));
		assertEquals("jePalindrom(\"110011\")", true, Palindrom.jePalindrom("110011"));
		assertEquals("jePalindrom(\"111001\")", false, Palindrom.jePalindrom("111001"));
		assertEquals("jePalindrom(\"10001\")", true, Palindrom.jePalindrom("10001"));
		assertEquals("jePalindrom(\"1000101\")", false, Palindrom.jePalindrom("1000101"));
		assertEquals("jePalindrom(\"11001\")", false, Palindrom.jePalindrom("11001"));
		assertEquals("jePalindrom(\"10000\")", false, Palindrom.jePalindrom("10000"));
		assertEquals("jePalindrom(\"10\")", false, Palindrom.jePalindrom("10"));
		assertEquals("jePalindrom(\"101101\")", true, Palindrom.jePalindrom("101101"));
		assertEquals("jePalindrom(\"111001\")", false, Palindrom.jePalindrom("111001"));
		assertEquals("jePalindrom(\"1001101\")", false, Palindrom.jePalindrom("1001101"));
		assertEquals("jePalindrom(\"1100010\")", false, Palindrom.jePalindrom("1100010"));
		assertEquals("jePalindrom(\"1000\")", false, Palindrom.jePalindrom("1000"));
		assertEquals("jePalindrom(\"1011111\")", false, Palindrom.jePalindrom("1011111"));
		assertEquals("jePalindrom(\"1000010\")", false, Palindrom.jePalindrom("1000010"));
		assertEquals("jePalindrom(\"111110\")", false, Palindrom.jePalindrom("111110"));
		assertEquals("jePalindrom(\"1001101\")", false, Palindrom.jePalindrom("1001101"));
		assertEquals("jePalindrom(\"10000\")", false, Palindrom.jePalindrom("10000"));
		assertEquals("jePalindrom(\"1000000\")", false, Palindrom.jePalindrom("1000000"));
		assertEquals("jePalindrom(\"110000\")", false, Palindrom.jePalindrom("110000"));
		assertEquals("jePalindrom(\"1010100\")", false, Palindrom.jePalindrom("1010100"));
		assertEquals("jePalindrom(\"1001100\")", false, Palindrom.jePalindrom("1001100"));
		assertEquals("jePalindrom(\"1001\")", true, Palindrom.jePalindrom("1001"));
		assertEquals("jePalindrom(\"1010101\")", true, Palindrom.jePalindrom("1010101"));
		assertEquals("jePalindrom(\"111100\")", false, Palindrom.jePalindrom("111100"));
		assertEquals("jePalindrom(\"101011\")", false, Palindrom.jePalindrom("101011"));
		assertEquals("jePalindrom(\"101010\")", false, Palindrom.jePalindrom("101010"));
		assertEquals("jePalindrom(\"1011101\")", true, Palindrom.jePalindrom("1011101"));
		assertEquals("jePalindrom(\"11\")", true, Palindrom.jePalindrom("11"));
		assertEquals("jePalindrom(\"1011011\")", false, Palindrom.jePalindrom("1011011"));
		assertEquals("jePalindrom(\"101111\")", false, Palindrom.jePalindrom("101111"));
		assertEquals("jePalindrom(\"1011111\")", false, Palindrom.jePalindrom("1011111"));
		assertEquals("jePalindrom(\"101\")", true, Palindrom.jePalindrom("101"));
		assertEquals("jePalindrom(\"1100000\")", false, Palindrom.jePalindrom("1100000"));
		assertEquals("jePalindrom(\"1000101\")", false, Palindrom.jePalindrom("1000101"));
		assertEquals("jePalindrom(\"110110\")", false, Palindrom.jePalindrom("110110"));
		assertEquals("jePalindrom(\"11101\")", false, Palindrom.jePalindrom("11101"));
		assertEquals("jePalindrom(\"101100\")", false, Palindrom.jePalindrom("101100"));
		assertEquals("jePalindrom(\"1001001\")", true, Palindrom.jePalindrom("1001001"));
		assertEquals("jePalindrom(\"10100\")", false, Palindrom.jePalindrom("10100"));
		assertEquals("jePalindrom(\"11000\")", false, Palindrom.jePalindrom("11000"));
		assertEquals("jePalindrom(\"1011110\")", false, Palindrom.jePalindrom("1011110"));
		assertEquals("jePalindrom(\"101111\")", false, Palindrom.jePalindrom("101111"));
		assertEquals("jePalindrom(\"1010010\")", false, Palindrom.jePalindrom("1010010"));
		assertEquals("jePalindrom(\"11100\")", false, Palindrom.jePalindrom("11100"));
		assertEquals("jePalindrom(\"100110\")", false, Palindrom.jePalindrom("100110"));
		assertEquals("jePalindrom(\"1011001\")", false, Palindrom.jePalindrom("1011001"));
		assertEquals("jePalindrom(\"1\")", true, Palindrom.jePalindrom("1"));
		assertEquals("jePalindrom(\"1000010\")", false, Palindrom.jePalindrom("1000010"));
		assertEquals("jePalindrom(\"110000\")", false, Palindrom.jePalindrom("110000"));
		assertEquals("jePalindrom(\"1010011\")", false, Palindrom.jePalindrom("1010011"));
		assertEquals("jePalindrom(\"1100000\")", false, Palindrom.jePalindrom("1100000"));
		assertEquals("jePalindrom(\"1001001\")", true, Palindrom.jePalindrom("1001001"));
		assertEquals("jePalindrom(\"1011111\")", false, Palindrom.jePalindrom("1011111"));
		assertEquals("jePalindrom(\"100001\")", true, Palindrom.jePalindrom("100001"));
		assertEquals("jePalindrom(\"1100010\")", false, Palindrom.jePalindrom("1100010"));
		assertEquals("jePalindrom(\"101110\")", false, Palindrom.jePalindrom("101110"));
		assertEquals("jePalindrom(\"1101\")", false, Palindrom.jePalindrom("1101"));
		assertEquals("jePalindrom(\"110100\")", false, Palindrom.jePalindrom("110100"));
		assertEquals("jePalindrom(\"1010111\")", false, Palindrom.jePalindrom("1010111"));
		assertEquals("jePalindrom(\"1010001\")", false, Palindrom.jePalindrom("1010001"));
		assertEquals("jePalindrom(\"1011101\")", true, Palindrom.jePalindrom("1011101"));
		assertEquals("jePalindrom(\"11111\")", true, Palindrom.jePalindrom("11111"));
		assertEquals("jePalindrom(\"1011\")", false, Palindrom.jePalindrom("1011"));
		assertEquals("jePalindrom(\"1010010\")", false, Palindrom.jePalindrom("1010010"));
		assertEquals("jePalindrom(\"101100\")", false, Palindrom.jePalindrom("101100"));
		assertEquals("jePalindrom(\"1010000\")", false, Palindrom.jePalindrom("1010000"));
		assertEquals("jePalindrom(\"10011\")", false, Palindrom.jePalindrom("10011"));
		assertEquals("jePalindrom(\"1101\")", false, Palindrom.jePalindrom("1101"));
		assertEquals("jePalindrom(\"100100\")", false, Palindrom.jePalindrom("100100"));
		assertEquals("jePalindrom(\"10\")", false, Palindrom.jePalindrom("10"));
		assertEquals("jePalindrom(\"1000001\")", true, Palindrom.jePalindrom("1000001"));
		assertEquals("jePalindrom(\"111111\")", true, Palindrom.jePalindrom("111111"));
		assertEquals("jePalindrom(\"1111\")", true, Palindrom.jePalindrom("1111"));
		assertEquals("jePalindrom(\"110\")", false, Palindrom.jePalindrom("110"));
		assertEquals("jePalindrom(\"11010\")", false, Palindrom.jePalindrom("11010"));
		assertEquals("jePalindrom(\"100101\")", false, Palindrom.jePalindrom("100101"));
		assertEquals("jePalindrom(\"1100001\")", false, Palindrom.jePalindrom("1100001"));
		assertEquals("jePalindrom(\"100111\")", false, Palindrom.jePalindrom("100111"));
		assertEquals("jePalindrom(\"11\")", true, Palindrom.jePalindrom("11"));
		assertEquals("jePalindrom(\"1001000\")", false, Palindrom.jePalindrom("1001000"));
		assertEquals("jePalindrom(\"100101\")", false, Palindrom.jePalindrom("100101"));
		assertEquals("jePalindrom(\"100\")", false, Palindrom.jePalindrom("100"));
		assertEquals("jePalindrom(\"1000010\")", false, Palindrom.jePalindrom("1000010"));
		assertEquals("jePalindrom(\"11100\")", false, Palindrom.jePalindrom("11100"));
		assertEquals("jePalindrom(\"1010010\")", false, Palindrom.jePalindrom("1010010"));
		assertEquals("jePalindrom(\"1001100\")", false, Palindrom.jePalindrom("1001100"));
		assertEquals("jePalindrom(\"1010011\")", false, Palindrom.jePalindrom("1010011"));
		assertEquals("jePalindrom(\"10011\")", false, Palindrom.jePalindrom("10011"));
		assertEquals("jePalindrom(\"11010\")", false, Palindrom.jePalindrom("11010"));
		assertEquals("jePalindrom(\"1001\")", true, Palindrom.jePalindrom("1001"));
		assertEquals("jePalindrom(\"10111\")", false, Palindrom.jePalindrom("10111"));
		assertEquals("jePalindrom(\"1010001\")", false, Palindrom.jePalindrom("1010001"));
		assertEquals("jePalindrom(\"101100\")", false, Palindrom.jePalindrom("101100"));
		assertEquals("jePalindrom(\"10110\")", false, Palindrom.jePalindrom("10110"));
		assertEquals("jePalindrom(\"1010100\")", false, Palindrom.jePalindrom("1010100"));
		assertEquals("jePalindrom(\"111001\")", false, Palindrom.jePalindrom("111001"));
		assertEquals("jePalindrom(\"1000111\")", false, Palindrom.jePalindrom("1000111"));
		assertEquals("jePalindrom(\"101011\")", false, Palindrom.jePalindrom("101011"));
		assertEquals("jePalindrom(\"100111\")", false, Palindrom.jePalindrom("100111"));
		assertEquals("jePalindrom(\"111011\")", false, Palindrom.jePalindrom("111011"));
		assertEquals("jePalindrom(\"1001111\")", false, Palindrom.jePalindrom("1001111"));
		assertEquals("jePalindrom(\"0\")", true, Palindrom.jePalindrom("0"));
		assertEquals("jePalindrom(\"1011011\")", false, Palindrom.jePalindrom("1011011"));
		assertEquals("jePalindrom(\"10110\")", false, Palindrom.jePalindrom("10110"));
		assertEquals("jePalindrom(\"1010000\")", false, Palindrom.jePalindrom("1010000"));
		assertEquals("jePalindrom(\"101110\")", false, Palindrom.jePalindrom("101110"));
		assertEquals("jePalindrom(\"110111\")", false, Palindrom.jePalindrom("110111"));
		assertEquals("jePalindrom(\"110\")", false, Palindrom.jePalindrom("110"));
		assertEquals("jePalindrom(\"111001\")", false, Palindrom.jePalindrom("111001"));
		assertEquals("jePalindrom(\"11001\")", false, Palindrom.jePalindrom("11001"));
		assertEquals("jePalindrom(\"1001100\")", false, Palindrom.jePalindrom("1001100"));
		assertEquals("jePalindrom(\"1010110\")", false, Palindrom.jePalindrom("1010110"));
		assertEquals("jePalindrom(\"1000100\")", false, Palindrom.jePalindrom("1000100"));
		assertEquals("jePalindrom(\"11011\")", true, Palindrom.jePalindrom("11011"));
		assertEquals("jePalindrom(\"1001\")", true, Palindrom.jePalindrom("1001"));
		assertEquals("jePalindrom(\"1010100\")", false, Palindrom.jePalindrom("1010100"));
		assertEquals("jePalindrom(\"1000001\")", true, Palindrom.jePalindrom("1000001"));
		assertEquals("jePalindrom(\"1001110\")", false, Palindrom.jePalindrom("1001110"));
		assertEquals("jePalindrom(\"1011100\")", false, Palindrom.jePalindrom("1011100"));
		assertEquals("jePalindrom(\"100101\")", false, Palindrom.jePalindrom("100101"));
		assertEquals("jePalindrom(\"1000\")", false, Palindrom.jePalindrom("1000"));
		assertEquals("jePalindrom(\"1\")", true, Palindrom.jePalindrom("1"));
		assertEquals("jePalindrom(\"1001110\")", false, Palindrom.jePalindrom("1001110"));
		assertEquals("jePalindrom(\"101100\")", false, Palindrom.jePalindrom("101100"));
		assertEquals("jePalindrom(\"110111\")", false, Palindrom.jePalindrom("110111"));
		assertEquals("jePalindrom(\"1011101\")", true, Palindrom.jePalindrom("1011101"));
		assertEquals("jePalindrom(\"1010010\")", false, Palindrom.jePalindrom("1010010"));
		assertEquals("jePalindrom(\"1000111\")", false, Palindrom.jePalindrom("1000111"));
		assertEquals("jePalindrom(\"1000110\")", false, Palindrom.jePalindrom("1000110"));
		assertEquals("jePalindrom(\"11111\")", true, Palindrom.jePalindrom("11111"));
		assertEquals("jePalindrom(\"100010\")", false, Palindrom.jePalindrom("100010"));
		assertEquals("jePalindrom(\"1101\")", false, Palindrom.jePalindrom("1101"));
		assertEquals("jePalindrom(\"111011\")", false, Palindrom.jePalindrom("111011"));
		assertEquals("jePalindrom(\"1000111\")", false, Palindrom.jePalindrom("1000111"));
		assertEquals("jePalindrom(\"11\")", true, Palindrom.jePalindrom("11"));
		assertEquals("jePalindrom(\"1001100\")", false, Palindrom.jePalindrom("1001100"));
		assertEquals("jePalindrom(\"101101\")", true, Palindrom.jePalindrom("101101"));
		assertEquals("jePalindrom(\"110111\")", false, Palindrom.jePalindrom("110111"));
		assertEquals("jePalindrom(\"101\")", true, Palindrom.jePalindrom("101"));
		assertEquals("jePalindrom(\"101011\")", false, Palindrom.jePalindrom("101011"));
		//scoring.updateScore("lang:common_list_test_scoring_name", 1);		
	}

	@Test
	public void testNajdlhsi() {	
		assertEquals("najdlhsi(\"1100101001011110\")", 9, Palindrom.najdlhsi("1100101001011110"));
		assertEquals("najdlhsi(\"10100001011100111\")", 10, Palindrom.najdlhsi("10100001011100111"));
		assertEquals("najdlhsi(\"111110110000101\")", 6, Palindrom.najdlhsi("111110110000101"));
		assertEquals("najdlhsi(\"10001010000111100\")", 9, Palindrom.najdlhsi("10001010000111100"));
		assertEquals("najdlhsi(\"100111001100\")", 9, Palindrom.najdlhsi("100111001100"));
		assertEquals("najdlhsi(\"1011101111101101\")", 11, Palindrom.najdlhsi("1011101111101101"));
		assertEquals("najdlhsi(\"10101010101110110\")", 11, Palindrom.najdlhsi("10101010101110110"));
		assertEquals("najdlhsi(\"1111010111100010\")", 11, Palindrom.najdlhsi("1111010111100010"));
		assertEquals("najdlhsi(\"11101100101101\")", 6, Palindrom.najdlhsi("11101100101101"));
		assertEquals("najdlhsi(\"10111000000100011\")", 8, Palindrom.najdlhsi("10111000000100011"));
		assertEquals("najdlhsi(\"1010110010110001\")", 5, Palindrom.najdlhsi("1010110010110001"));
		assertEquals("najdlhsi(\"1101110101010100\")", 9, Palindrom.najdlhsi("1101110101010100"));
		assertEquals("najdlhsi(\"1000111000000000\")", 9, Palindrom.najdlhsi("1000111000000000"));
		assertEquals("najdlhsi(\"1101011110110101\")", 8, Palindrom.najdlhsi("1101011110110101"));
		assertEquals("najdlhsi(\"100101101001100\")", 12, Palindrom.najdlhsi("100101101001100"));
		assertEquals("najdlhsi(\"10010111011101001\")", 17, Palindrom.najdlhsi("10010111011101001"));
		assertEquals("najdlhsi(\"10001100100100101\")", 10, Palindrom.najdlhsi("10001100100100101"));
		assertEquals("najdlhsi(\"10111111111101111\")", 14, Palindrom.najdlhsi("10111111111101111"));
		assertEquals("najdlhsi(\"1001000011100010\")", 9, Palindrom.najdlhsi("1001000011100010"));
		assertEquals("najdlhsi(\"100110111000110\")", 7, Palindrom.najdlhsi("100110111000110"));
		assertEquals("najdlhsi(\"10000001110100101\")", 8, Palindrom.najdlhsi("10000001110100101"));
		assertEquals("najdlhsi(\"10111010011001000\")", 10, Palindrom.najdlhsi("10111010011001000"));
		assertEquals("najdlhsi(\"1011011101000111\")", 7, Palindrom.najdlhsi("1011011101000111"));
		assertEquals("najdlhsi(\"1000101110111000\")", 9, Palindrom.najdlhsi("1000101110111000"));
		assertEquals("najdlhsi(\"10011100010111111\")", 7, Palindrom.najdlhsi("10011100010111111"));
		assertEquals("najdlhsi(\"1111101010111011\")", 11, Palindrom.najdlhsi("1111101010111011"));
		assertEquals("najdlhsi(\"111101110000101\")", 7, Palindrom.najdlhsi("111101110000101"));
		assertEquals("najdlhsi(\"1010000001111101\")", 8, Palindrom.najdlhsi("1010000001111101"));
		assertEquals("najdlhsi(\"1010101110010000\")", 7, Palindrom.najdlhsi("1010101110010000"));
		assertEquals("najdlhsi(\"1010000000101111\")", 13, Palindrom.najdlhsi("1010000000101111"));
		assertEquals("najdlhsi(\"1000100110110111\")", 8, Palindrom.najdlhsi("1000100110110111"));
		assertEquals("najdlhsi(\"1110110000111101\")", 8, Palindrom.najdlhsi("1110110000111101"));
		assertEquals("najdlhsi(\"10101011100011110\")", 9, Palindrom.najdlhsi("10101011100011110"));
		assertEquals("najdlhsi(\"10111110101011001\")", 9, Palindrom.najdlhsi("10111110101011001"));
		assertEquals("najdlhsi(\"10100100000100010\")", 11, Palindrom.najdlhsi("10100100000100010"));
		assertEquals("najdlhsi(\"1000011000010110\")", 12, Palindrom.najdlhsi("1000011000010110"));
		assertEquals("najdlhsi(\"10111000000001\")", 10, Palindrom.najdlhsi("10111000000001"));
		assertEquals("najdlhsi(\"10000010111111000\")", 8, Palindrom.najdlhsi("10000010111111000"));
		assertEquals("najdlhsi(\"1010011001101011\")", 8, Palindrom.najdlhsi("1010011001101011"));
		assertEquals("najdlhsi(\"10100100011110100\")", 6, Palindrom.najdlhsi("10100100011110100"));
		assertEquals("najdlhsi(\"1110100111101111\")", 9, Palindrom.najdlhsi("1110100111101111"));
		assertEquals("najdlhsi(\"10110000110011110\")", 10, Palindrom.najdlhsi("10110000110011110"));
		assertEquals("najdlhsi(\"10010000101111001\")", 8, Palindrom.najdlhsi("10010000101111001"));
		assertEquals("najdlhsi(\"10110011111000000\")", 9, Palindrom.najdlhsi("10110011111000000"));
		assertEquals("najdlhsi(\"101110011000010\")", 6, Palindrom.najdlhsi("101110011000010"));
		assertEquals("najdlhsi(\"100001111001110\")", 8, Palindrom.najdlhsi("100001111001110"));
		assertEquals("najdlhsi(\"100100011001000\")", 6, Palindrom.najdlhsi("100100011001000"));
		assertEquals("najdlhsi(\"1101101010001111\")", 6, Palindrom.najdlhsi("1101101010001111"));
		assertEquals("najdlhsi(\"1111111101101000\")", 8, Palindrom.najdlhsi("1111111101101000"));
		assertEquals("najdlhsi(\"10111010001100000\")", 8, Palindrom.najdlhsi("10111010001100000"));
		assertEquals("najdlhsi(\"10011010111000111\")", 9, Palindrom.najdlhsi("10011010111000111"));
		assertEquals("najdlhsi(\"10100000011100\")", 8, Palindrom.najdlhsi("10100000011100"));
		assertEquals("najdlhsi(\"11000110100110\")", 7, Palindrom.najdlhsi("11000110100110"));
		assertEquals("najdlhsi(\"1010001010100010\")", 15, Palindrom.najdlhsi("1010001010100010"));
		assertEquals("najdlhsi(\"1001110010101111\")", 9, Palindrom.najdlhsi("1001110010101111"));
		assertEquals("najdlhsi(\"10010100100010000\")", 9, Palindrom.najdlhsi("10010100100010000"));
		assertEquals("najdlhsi(\"10001100111101001\")", 6, Palindrom.najdlhsi("10001100111101001"));
		assertEquals("najdlhsi(\"11000010111001\")", 6, Palindrom.najdlhsi("11000010111001"));
		assertEquals("najdlhsi(\"110010010100000\")", 7, Palindrom.najdlhsi("110010010100000"));
		assertEquals("najdlhsi(\"10010111001111100\")", 9, Palindrom.najdlhsi("10010111001111100"));
		assertEquals("najdlhsi(\"1001010110101100\")", 10, Palindrom.najdlhsi("1001010110101100"));
		assertEquals("najdlhsi(\"10110000110100101\")", 12, Palindrom.najdlhsi("10110000110100101"));
		assertEquals("najdlhsi(\"1110010100111001\")", 13, Palindrom.najdlhsi("1110010100111001"));
		assertEquals("najdlhsi(\"1100000011001001\")", 10, Palindrom.najdlhsi("1100000011001001"));
		assertEquals("najdlhsi(\"10011111101111111\")", 13, Palindrom.najdlhsi("10011111101111111"));
		assertEquals("najdlhsi(\"101110000100010\")", 7, Palindrom.najdlhsi("101110000100010"));
		assertEquals("najdlhsi(\"101011110100\")", 10, Palindrom.najdlhsi("101011110100"));
		assertEquals("najdlhsi(\"10100000100111\")", 9, Palindrom.najdlhsi("10100000100111"));
		assertEquals("najdlhsi(\"10111101001011010\")", 10, Palindrom.najdlhsi("10111101001011010"));
		assertEquals("najdlhsi(\"10000110101001010\")", 10, Palindrom.najdlhsi("10000110101001010"));
		assertEquals("najdlhsi(\"1001010100111100\")", 11, Palindrom.najdlhsi("1001010100111100"));
		assertEquals("najdlhsi(\"101101001000010\")", 8, Palindrom.najdlhsi("101101001000010"));
		assertEquals("najdlhsi(\"10101111010011110\")", 10, Palindrom.najdlhsi("10101111010011110"));
		assertEquals("najdlhsi(\"11111011000\")", 5, Palindrom.najdlhsi("11111011000"));
		assertEquals("najdlhsi(\"10000000100001011\")", 9, Palindrom.najdlhsi("10000000100001011"));
		assertEquals("najdlhsi(\"11100101110011\")", 6, Palindrom.najdlhsi("11100101110011"));
		assertEquals("najdlhsi(\"1011101110000100\")", 9, Palindrom.najdlhsi("1011101110000100"));
		assertEquals("najdlhsi(\"10100110110001000\")", 9, Palindrom.najdlhsi("10100110110001000"));
		assertEquals("najdlhsi(\"1000010110000101\")", 6, Palindrom.najdlhsi("1000010110000101"));
		assertEquals("najdlhsi(\"10000100000010011\")", 12, Palindrom.najdlhsi("10000100000010011"));
		assertEquals("najdlhsi(\"1101010001000100\")", 11, Palindrom.najdlhsi("1101010001000100"));
		assertEquals("najdlhsi(\"1100101001011011\")", 9, Palindrom.najdlhsi("1100101001011011"));
		assertEquals("najdlhsi(\"1001111101011\")", 7, Palindrom.najdlhsi("1001111101011"));
		assertEquals("najdlhsi(\"10000101001001010\")", 13, Palindrom.najdlhsi("10000101001001010"));
		assertEquals("najdlhsi(\"101101011100100\")", 7, Palindrom.najdlhsi("101101011100100"));
		assertEquals("najdlhsi(\"10010110000110110\")", 12, Palindrom.najdlhsi("10010110000110110"));
		assertEquals("najdlhsi(\"110100101111100\")", 10, Palindrom.najdlhsi("110100101111100"));
		assertEquals("najdlhsi(\"1011011110000101\")", 6, Palindrom.najdlhsi("1011011110000101"));
		assertEquals("najdlhsi(\"10000111011111011\")", 11, Palindrom.najdlhsi("10000111011111011"));
		assertEquals("najdlhsi(\"111011010101001\")", 7, Palindrom.najdlhsi("111011010101001"));
		assertEquals("najdlhsi(\"10111101101110\")", 10, Palindrom.najdlhsi("10111101101110"));
		assertEquals("najdlhsi(\"10011110110000101\")", 6, Palindrom.najdlhsi("10011110110000101"));
		assertEquals("najdlhsi(\"1011010101100001\")", 11, Palindrom.najdlhsi("1011010101100001"));
		assertEquals("najdlhsi(\"1110110100101101\")", 14, Palindrom.najdlhsi("1110110100101101"));
		assertEquals("najdlhsi(\"1000001010100101\")", 9, Palindrom.najdlhsi("1000001010100101"));
		assertEquals("najdlhsi(\"10111111110110100\")", 12, Palindrom.najdlhsi("10111111110110100"));
		assertEquals("najdlhsi(\"1101111110010101\")", 8, Palindrom.najdlhsi("1101111110010101"));
		assertEquals("najdlhsi(\"11100111\")", 8, Palindrom.najdlhsi("11100111"));
		assertEquals("najdlhsi(\"10001101110101110\")", 11, Palindrom.najdlhsi("10001101110101110"));
		assertEquals("najdlhsi(\"10011110101110011\")", 9, Palindrom.najdlhsi("10011110101110011"));
		assertEquals("najdlhsi(\"1111100111101010\")", 10, Palindrom.najdlhsi("1111100111101010"));
		assertEquals("najdlhsi(\"1111000101001001\")", 7, Palindrom.najdlhsi("1111000101001001"));
		assertEquals("najdlhsi(\"1110111010111011\")", 15, Palindrom.najdlhsi("1110111010111011"));
		assertEquals("najdlhsi(\"10001001111001111\")", 10, Palindrom.najdlhsi("10001001111001111"));
		assertEquals("najdlhsi(\"1011001100101111\")", 8, Palindrom.najdlhsi("1011001100101111"));
		assertEquals("najdlhsi(\"1000011100011000\")", 9, Palindrom.najdlhsi("1000011100011000"));
		assertEquals("najdlhsi(\"10111100011100\")", 9, Palindrom.najdlhsi("10111100011100"));
		assertEquals("najdlhsi(\"10100000101110010\")", 11, Palindrom.najdlhsi("10100000101110010"));
		assertEquals("najdlhsi(\"1001001110111010\")", 9, Palindrom.najdlhsi("1001001110111010"));
		assertEquals("najdlhsi(\"1100010001101000\")", 11, Palindrom.najdlhsi("1100010001101000"));
		assertEquals("najdlhsi(\"11000010100110101\")", 7, Palindrom.najdlhsi("11000010100110101"));
		assertEquals("najdlhsi(\"11111000010110\")", 6, Palindrom.najdlhsi("11111000010110"));
		assertEquals("najdlhsi(\"110010110000\")", 4, Palindrom.najdlhsi("110010110000"));
		assertEquals("najdlhsi(\"10100010001100011\")", 10, Palindrom.najdlhsi("10100010001100011"));
		assertEquals("najdlhsi(\"1011101100001\")", 7, Palindrom.najdlhsi("1011101100001"));
		assertEquals("najdlhsi(\"1101110010110100\")", 10, Palindrom.najdlhsi("1101110010110100"));
		assertEquals("najdlhsi(\"10111111101110011\")", 11, Palindrom.najdlhsi("10111111101110011"));
		assertEquals("najdlhsi(\"100001110101000\")", 6, Palindrom.najdlhsi("100001110101000"));
		assertEquals("najdlhsi(\"1000111100000011\")", 10, Palindrom.najdlhsi("1000111100000011"));
		assertEquals("najdlhsi(\"111001111011\")", 8, Palindrom.najdlhsi("111001111011"));
		assertEquals("najdlhsi(\"110110111101001\")", 8, Palindrom.najdlhsi("110110111101001"));
		assertEquals("najdlhsi(\"10101010111110000\")", 9, Palindrom.najdlhsi("10101010111110000"));
		assertEquals("najdlhsi(\"100001000101\")", 7, Palindrom.najdlhsi("100001000101"));
		assertEquals("najdlhsi(\"100001001111100\")", 9, Palindrom.najdlhsi("100001001111100"));
		assertEquals("najdlhsi(\"1010000101\")", 10, Palindrom.najdlhsi("1010000101"));
		assertEquals("najdlhsi(\"10001001110101101\")", 7, Palindrom.najdlhsi("10001001110101101"));
		assertEquals("najdlhsi(\"10001101111010000\")", 8, Palindrom.najdlhsi("10001101111010000"));
		assertEquals("najdlhsi(\"100110101100001\")", 11, Palindrom.najdlhsi("100110101100001"));
		assertEquals("najdlhsi(\"10000110001110100\")", 8, Palindrom.najdlhsi("10000110001110100"));
		assertEquals("najdlhsi(\"1110000101001011\")", 8, Palindrom.najdlhsi("1110000101001011"));
		assertEquals("najdlhsi(\"1101001100110\")", 8, Palindrom.najdlhsi("1101001100110"));
		assertEquals("najdlhsi(\"1100010011110\")", 6, Palindrom.najdlhsi("1100010011110"));
		assertEquals("najdlhsi(\"11010010100110\")", 9, Palindrom.najdlhsi("11010010100110"));
		assertEquals("najdlhsi(\"1001111111000\")", 11, Palindrom.najdlhsi("1001111111000"));
		assertEquals("najdlhsi(\"111110000111111\")", 14, Palindrom.najdlhsi("111110000111111"));
		assertEquals("najdlhsi(\"1101001100100000\")", 10, Palindrom.najdlhsi("1101001100100000"));
		assertEquals("najdlhsi(\"1110001011010110\")", 9, Palindrom.najdlhsi("1110001011010110"));
		assertEquals("najdlhsi(\"1000000110100000\")", 8, Palindrom.najdlhsi("1000000110100000"));
		assertEquals("najdlhsi(\"100011110\")", 6, Palindrom.najdlhsi("100011110"));
		assertEquals("najdlhsi(\"10101011101000001\")", 9, Palindrom.najdlhsi("10101011101000001"));
		assertEquals("najdlhsi(\"10100100110111000\")", 7, Palindrom.najdlhsi("10100100110111000"));
		assertEquals("najdlhsi(\"1001010111110000\")", 7, Palindrom.najdlhsi("1001010111110000"));
		assertEquals("najdlhsi(\"1101001101001111\")", 4, Palindrom.najdlhsi("1101001101001111"));
		assertEquals("najdlhsi(\"10100100000111110\")", 7, Palindrom.najdlhsi("10100100000111110"));
		assertEquals("najdlhsi(\"1001000110111110\")", 7, Palindrom.najdlhsi("1001000110111110"));
		assertEquals("najdlhsi(\"10000001111111100\")", 12, Palindrom.najdlhsi("10000001111111100"));
		assertEquals("najdlhsi(\"1001010011111111\")", 9, Palindrom.najdlhsi("1001010011111111"));
		assertEquals("najdlhsi(\"10000011100000\")", 13, Palindrom.najdlhsi("10000011100000"));
		assertEquals("najdlhsi(\"10100000001001000\")", 11, Palindrom.najdlhsi("10100000001001000"));
		assertEquals("najdlhsi(\"10101011101111101\")", 9, Palindrom.najdlhsi("10101011101111101"));
		assertEquals("najdlhsi(\"10101111010111000\")", 12, Palindrom.najdlhsi("10101111010111000"));
		assertEquals("najdlhsi(\"111000101110110\")", 7, Palindrom.najdlhsi("111000101110110"));
		assertEquals("najdlhsi(\"1010000101000110\")", 10, Palindrom.najdlhsi("1010000101000110"));
		assertEquals("najdlhsi(\"101111111110010\")", 11, Palindrom.najdlhsi("101111111110010"));
		assertEquals("najdlhsi(\"1001000100111000\")", 11, Palindrom.najdlhsi("1001000100111000"));
		assertEquals("najdlhsi(\"10000010010100100\")", 13, Palindrom.najdlhsi("10000010010100100"));
		assertEquals("najdlhsi(\"10101101101010\")", 13, Palindrom.najdlhsi("10101101101010"));
		assertEquals("najdlhsi(\"10110011001100111\")", 14, Palindrom.najdlhsi("10110011001100111"));
		assertEquals("najdlhsi(\"10100010100101101\")", 9, Palindrom.najdlhsi("10100010100101101"));
		assertEquals("najdlhsi(\"1000000110110101\")", 8, Palindrom.najdlhsi("1000000110110101"));
		assertEquals("najdlhsi(\"111110001001111\")", 5, Palindrom.najdlhsi("111110001001111"));
		assertEquals("najdlhsi(\"1111110011010011\")", 6, Palindrom.najdlhsi("1111110011010011"));
		assertEquals("najdlhsi(\"1010001101001111\")", 5, Palindrom.najdlhsi("1010001101001111"));
		assertEquals("najdlhsi(\"10111000100001011\")", 8, Palindrom.najdlhsi("10111000100001011"));
		assertEquals("najdlhsi(\"10011000010000000\")", 9, Palindrom.najdlhsi("10011000010000000"));
		assertEquals("najdlhsi(\"10011111011111011\")", 13, Palindrom.najdlhsi("10011111011111011"));
		assertEquals("najdlhsi(\"10011001011001\")", 8, Palindrom.najdlhsi("10011001011001"));
		assertEquals("najdlhsi(\"101100101010111\")", 7, Palindrom.najdlhsi("101100101010111"));
		assertEquals("najdlhsi(\"1010010010100110\")", 11, Palindrom.najdlhsi("1010010010100110"));
		assertEquals("najdlhsi(\"1111010110110100\")", 11, Palindrom.najdlhsi("1111010110110100"));
		assertEquals("najdlhsi(\"10001110000000101\")", 9, Palindrom.najdlhsi("10001110000000101"));
		assertEquals("najdlhsi(\"10010011110000100\")", 8, Palindrom.najdlhsi("10010011110000100"));
		assertEquals("najdlhsi(\"11010010110010\")", 10, Palindrom.najdlhsi("11010010110010"));
		assertEquals("najdlhsi(\"10000101000110\")", 9, Palindrom.najdlhsi("10000101000110"));
		assertEquals("najdlhsi(\"10100010001000100\")", 15, Palindrom.najdlhsi("10100010001000100"));
		assertEquals("najdlhsi(\"11100100101110\")", 7, Palindrom.najdlhsi("11100100101110"));
		assertEquals("najdlhsi(\"1011001010100011\")", 9, Palindrom.najdlhsi("1011001010100011"));
		assertEquals("najdlhsi(\"10010000001101011\")", 8, Palindrom.najdlhsi("10010000001101011"));
		assertEquals("najdlhsi(\"1011101001010111\")", 8, Palindrom.najdlhsi("1011101001010111"));
		assertEquals("najdlhsi(\"1010001000010000\")", 12, Palindrom.najdlhsi("1010001000010000"));
		assertEquals("najdlhsi(\"10000101111110101\")", 12, Palindrom.najdlhsi("10000101111110101"));
		assertEquals("najdlhsi(\"10001100010010111\")", 10, Palindrom.najdlhsi("10001100010010111"));
		assertEquals("najdlhsi(\"10000111100001110\")", 14, Palindrom.najdlhsi("10000111100001110"));
		assertEquals("najdlhsi(\"1110000100111011\")", 6, Palindrom.najdlhsi("1110000100111011"));
		assertEquals("najdlhsi(\"1101000000100111\")", 10, Palindrom.najdlhsi("1101000000100111"));
		assertEquals("najdlhsi(\"110011011010010\")", 7, Palindrom.najdlhsi("110011011010010"));
		assertEquals("najdlhsi(\"1100110101111010\")", 10, Palindrom.najdlhsi("1100110101111010"));
		assertEquals("najdlhsi(\"10100100010000010\")", 9, Palindrom.najdlhsi("10100100010000010"));
		assertEquals("najdlhsi(\"1100000001000110\")", 9, Palindrom.najdlhsi("1100000001000110"));
		assertEquals("najdlhsi(\"1011110111000001\")", 8, Palindrom.najdlhsi("1011110111000001"));
		assertEquals("najdlhsi(\"110101110110000\")", 7, Palindrom.najdlhsi("110101110110000"));
		assertEquals("najdlhsi(\"10011011010110010\")", 9, Palindrom.najdlhsi("10011011010110010"));
		assertEquals("najdlhsi(\"10010011111011\")", 7, Palindrom.najdlhsi("10010011111011"));
		assertEquals("najdlhsi(\"111011110100010\")", 8, Palindrom.najdlhsi("111011110100010"));
		assertEquals("najdlhsi(\"1000111111011100\")", 8, Palindrom.najdlhsi("1000111111011100"));
		assertEquals("najdlhsi(\"10010101110011111\")", 8, Palindrom.najdlhsi("10010101110011111"));
		assertEquals("najdlhsi(\"10000010110001101\")", 11, Palindrom.najdlhsi("10000010110001101"));
		assertEquals("najdlhsi(\"1011001010110110\")", 7, Palindrom.najdlhsi("1011001010110110"));
		assertEquals("najdlhsi(\"100000111111\")", 7, Palindrom.najdlhsi("100000111111"));
		assertEquals("najdlhsi(\"10000001011010\")", 8, Palindrom.najdlhsi("10000001011010"));
		//scoring.updateScore("lang:common_list_test_scoring_name", 2);		
	}
	
	@Test
	public void testMinPalindrom() {
		assertEquals("minPalindrom(\"100010101011100\")", 25, Palindrom.minPalindrom("100010101011100"));
		assertEquals("minPalindrom(\"10001100100110100\")", 29, Palindrom.minPalindrom("10001100100110100"));
		assertEquals("minPalindrom(\"10111100000111100\")", 26, Palindrom.minPalindrom("10111100000111100"));
		assertEquals("minPalindrom(\"110100011100001\")", 24, Palindrom.minPalindrom("110100011100001"));
		assertEquals("minPalindrom(\"1010110100110001\")", 27, Palindrom.minPalindrom("1010110100110001"));
		assertEquals("minPalindrom(\"1100110000111111\")", 26, Palindrom.minPalindrom("1100110000111111"));
		assertEquals("minPalindrom(\"10011011011101111\")", 30, Palindrom.minPalindrom("10011011011101111"));
		assertEquals("minPalindrom(\"1100110101010001\")", 26, Palindrom.minPalindrom("1100110101010001"));
		assertEquals("minPalindrom(\"11000111010011\")", 21, Palindrom.minPalindrom("11000111010011"));
		assertEquals("minPalindrom(\"10101101110111101\")", 26, Palindrom.minPalindrom("10101101110111101"));
		assertEquals("minPalindrom(\"101101000100011\")", 24, Palindrom.minPalindrom("101101000100011"));
		assertEquals("minPalindrom(\"111010110101001\")", 26, Palindrom.minPalindrom("111010110101001"));
		assertEquals("minPalindrom(\"1111010000000001\")", 21, Palindrom.minPalindrom("1111010000000001"));
		assertEquals("minPalindrom(\"1001100000110\")", 15, Palindrom.minPalindrom("1001100000110"));
		assertEquals("minPalindrom(\"11111101111110\")", 15, Palindrom.minPalindrom("11111101111110"));
		assertEquals("minPalindrom(\"10011001100110000\")", 22, Palindrom.minPalindrom("10011001100110000"));
		assertEquals("minPalindrom(\"1001101111110001\")", 27, Palindrom.minPalindrom("1001101111110001"));
		assertEquals("minPalindrom(\"1010100000000101\")", 18, Palindrom.minPalindrom("1010100000000101"));
		assertEquals("minPalindrom(\"10101001110101\")", 23, Palindrom.minPalindrom("10101001110101"));
		assertEquals("minPalindrom(\"11000010010111111\")", 28, Palindrom.minPalindrom("11000010010111111"));
		assertEquals("minPalindrom(\"101000010101100\")", 20, Palindrom.minPalindrom("101000010101100"));
		assertEquals("minPalindrom(\"1100000000100100\")", 24, Palindrom.minPalindrom("1100000000100100"));
		assertEquals("minPalindrom(\"10100000100111011\")", 29, Palindrom.minPalindrom("10100000100111011"));
		assertEquals("minPalindrom(\"10000110111000101\")", 28, Palindrom.minPalindrom("10000110111000101"));
		assertEquals("minPalindrom(\"1100100001000111\")", 29, Palindrom.minPalindrom("1100100001000111"));
		assertEquals("minPalindrom(\"101011001000000\")", 24, Palindrom.minPalindrom("101011001000000"));
		assertEquals("minPalindrom(\"101111111100011\")", 23, Palindrom.minPalindrom("101111111100011"));
		assertEquals("minPalindrom(\"110101001101011\")", 23, Palindrom.minPalindrom("110101001101011"));
		assertEquals("minPalindrom(\"10110100011011010\")", 28, Palindrom.minPalindrom("10110100011011010"));
		assertEquals("minPalindrom(\"1111010000011011\")", 27, Palindrom.minPalindrom("1111010000011011"));
		assertEquals("minPalindrom(\"1001101100010011\")", 28, Palindrom.minPalindrom("1001101100010011"));
		assertEquals("minPalindrom(\"101101010010010\")", 21, Palindrom.minPalindrom("101101010010010"));
		assertEquals("minPalindrom(\"1101100111111\")", 20, Palindrom.minPalindrom("1101100111111"));
		assertEquals("minPalindrom(\"1011101110000\")", 19, Palindrom.minPalindrom("1011101110000"));
		assertEquals("minPalindrom(\"1000000000000111\")", 18, Palindrom.minPalindrom("1000000000000111"));
		assertEquals("minPalindrom(\"110111100111000\")", 25, Palindrom.minPalindrom("110111100111000"));
		assertEquals("minPalindrom(\"10111010111101001\")", 27, Palindrom.minPalindrom("10111010111101001"));
		assertEquals("minPalindrom(\"1010101000001\")", 19, Palindrom.minPalindrom("1010101000001"));
		assertEquals("minPalindrom(\"10110011111\")", 17, Palindrom.minPalindrom("10110011111"));
		assertEquals("minPalindrom(\"101000000111010\")", 27, Palindrom.minPalindrom("101000000111010"));
		assertEquals("minPalindrom(\"1100110010011111\")", 26, Palindrom.minPalindrom("1100110010011111"));
		assertEquals("minPalindrom(\"10010111001101100\")", 25, Palindrom.minPalindrom("10010111001101100"));
		assertEquals("minPalindrom(\"10101111110000111\")", 24, Palindrom.minPalindrom("10101111110000111"));
		assertEquals("minPalindrom(\"11001101110011\")", 22, Palindrom.minPalindrom("11001101110011"));
		assertEquals("minPalindrom(\"1110111101110011\")", 20, Palindrom.minPalindrom("1110111101110011"));
		assertEquals("minPalindrom(\"1110000000011100\")", 18, Palindrom.minPalindrom("1110000000011100"));
		assertEquals("minPalindrom(\"10100011001100001\")", 28, Palindrom.minPalindrom("10100011001100001"));
		assertEquals("minPalindrom(\"10101001101100011\")", 27, Palindrom.minPalindrom("10101001101100011"));
		assertEquals("minPalindrom(\"1010001000011\")", 23, Palindrom.minPalindrom("1010001000011"));
		assertEquals("minPalindrom(\"10001011110011100\")", 27, Palindrom.minPalindrom("10001011110011100"));
		assertEquals("minPalindrom(\"1110100110000\")", 22, Palindrom.minPalindrom("1110100110000"));
		assertEquals("minPalindrom(\"10101100010101011\")", 29, Palindrom.minPalindrom("10101100010101011"));
		assertEquals("minPalindrom(\"10100111110001011\")", 31, Palindrom.minPalindrom("10100111110001011"));
		assertEquals("minPalindrom(\"1101110010100110\")", 27, Palindrom.minPalindrom("1101110010100110"));
		assertEquals("minPalindrom(\"111011011100011\")", 20, Palindrom.minPalindrom("111011011100011"));
		assertEquals("minPalindrom(\"1100001110110100\")", 24, Palindrom.minPalindrom("1100001110110100"));
		assertEquals("minPalindrom(\"1001110101000100\")", 27, Palindrom.minPalindrom("1001110101000100"));
		assertEquals("minPalindrom(\"1110010111011010\")", 29, Palindrom.minPalindrom("1110010111011010"));
		assertEquals("minPalindrom(\"1001100000111101\")", 28, Palindrom.minPalindrom("1001100000111101"));
		assertEquals("minPalindrom(\"101000010001111\")", 26, Palindrom.minPalindrom("101000010001111"));
		assertEquals("minPalindrom(\"10000111001111101\")", 28, Palindrom.minPalindrom("10000111001111101"));
		assertEquals("minPalindrom(\"1101100001001010\")", 27, Palindrom.minPalindrom("1101100001001010"));
		assertEquals("minPalindrom(\"1110001111011101\")", 23, Palindrom.minPalindrom("1110001111011101"));
		assertEquals("minPalindrom(\"110001011010111\")", 27, Palindrom.minPalindrom("110001011010111"));
		assertEquals("minPalindrom(\"10100110110010101\")", 19, Palindrom.minPalindrom("10100110110010101"));
		assertEquals("minPalindrom(\"1010101100010010\")", 25, Palindrom.minPalindrom("1010101100010010"));
		assertEquals("minPalindrom(\"10001110010001111\")", 29, Palindrom.minPalindrom("10001110010001111"));
		assertEquals("minPalindrom(\"10000101110110011\")", 28, Palindrom.minPalindrom("10000101110110011"));
		assertEquals("minPalindrom(\"11010001110010\")", 25, Palindrom.minPalindrom("11010001110010"));
		assertEquals("minPalindrom(\"10100011110000101\")", 31, Palindrom.minPalindrom("10100011110000101"));
		assertEquals("minPalindrom(\"10010100101001110\")", 20, Palindrom.minPalindrom("10010100101001110"));
		assertEquals("minPalindrom(\"10010110111110111\")", 27, Palindrom.minPalindrom("10010110111110111"));
		assertEquals("minPalindrom(\"1010101010000010\")", 23, Palindrom.minPalindrom("1010101010000010"));
		assertEquals("minPalindrom(\"1010110100010\")", 19, Palindrom.minPalindrom("1010110100010"));
		assertEquals("minPalindrom(\"10101100011110100\")", 29, Palindrom.minPalindrom("10101100011110100"));
		assertEquals("minPalindrom(\"10010111001101010\")", 29, Palindrom.minPalindrom("10010111001101010"));
		assertEquals("minPalindrom(\"10001010001101011\")", 23, Palindrom.minPalindrom("10001010001101011"));
		assertEquals("minPalindrom(\"100110110000101\")", 26, Palindrom.minPalindrom("100110110000101"));
		assertEquals("minPalindrom(\"10100101001111111\")", 26, Palindrom.minPalindrom("10100101001111111"));
		assertEquals("minPalindrom(\"1101000100100011\")", 30, Palindrom.minPalindrom("1101000100100011"));
		assertEquals("minPalindrom(\"1000100010001\")", 13, Palindrom.minPalindrom("1000100010001"));
		assertEquals("minPalindrom(\"10011000011010\")", 24, Palindrom.minPalindrom("10011000011010"));
		assertEquals("minPalindrom(\"10000011000010\")", 21, Palindrom.minPalindrom("10000011000010"));
		assertEquals("minPalindrom(\"1111110101101100\")", 26, Palindrom.minPalindrom("1111110101101100"));
		assertEquals("minPalindrom(\"1101000000000100\")", 27, Palindrom.minPalindrom("1101000000000100"));
		assertEquals("minPalindrom(\"1001011101101\")", 20, Palindrom.minPalindrom("1001011101101"));
		assertEquals("minPalindrom(\"1110001001100101\")", 29, Palindrom.minPalindrom("1110001001100101"));
		assertEquals("minPalindrom(\"1000001110001001\")", 25, Palindrom.minPalindrom("1000001110001001"));
		assertEquals("minPalindrom(\"1001010110000010\")", 28, Palindrom.minPalindrom("1001010110000010"));
		assertEquals("minPalindrom(\"111110011111101\")", 18, Palindrom.minPalindrom("111110011111101"));
		assertEquals("minPalindrom(\"1110010111011010\")", 29, Palindrom.minPalindrom("1110010111011010"));
		assertEquals("minPalindrom(\"10000000011010010\")", 24, Palindrom.minPalindrom("10000000011010010"));
		assertEquals("minPalindrom(\"101111001110000\")", 26, Palindrom.minPalindrom("101111001110000"));
		assertEquals("minPalindrom(\"10011010111101111\")", 25, Palindrom.minPalindrom("10011010111101111"));
		assertEquals("minPalindrom(\"10100111110011110\")", 28, Palindrom.minPalindrom("10100111110011110"));
		assertEquals("minPalindrom(\"1010001010011011\")", 23, Palindrom.minPalindrom("1010001010011011"));
		assertEquals("minPalindrom(\"101101100010001\")", 21, Palindrom.minPalindrom("101101100010001"));
		assertEquals("minPalindrom(\"10111010110011110\")", 27, Palindrom.minPalindrom("10111010110011110"));
		assertEquals("minPalindrom(\"10100011001000111\")", 31, Palindrom.minPalindrom("10100011001000111"));
		assertEquals("minPalindrom(\"1101000011010100\")", 30, Palindrom.minPalindrom("1101000011010100"));
		assertEquals("minPalindrom(\"1101001000000000\")", 23, Palindrom.minPalindrom("1101001000000000"));
		assertEquals("minPalindrom(\"1100011110101111\")", 21, Palindrom.minPalindrom("1100011110101111"));
		assertEquals("minPalindrom(\"110111011010000\")", 21, Palindrom.minPalindrom("110111011010000"));
		assertEquals("minPalindrom(\"10010000101101\")", 22, Palindrom.minPalindrom("10010000101101"));
		assertEquals("minPalindrom(\"10000001001010000\")", 26, Palindrom.minPalindrom("10000001001010000"));
		assertEquals("minPalindrom(\"10110001110000011\")", 25, Palindrom.minPalindrom("10110001110000011"));
		assertEquals("minPalindrom(\"1010000010011110\")", 26, Palindrom.minPalindrom("1010000010011110"));
		assertEquals("minPalindrom(\"110000010110010\")", 27, Palindrom.minPalindrom("110000010110010"));
		assertEquals("minPalindrom(\"110011010011110\")", 24, Palindrom.minPalindrom("110011010011110"));
		assertEquals("minPalindrom(\"111111100110\")", 17, Palindrom.minPalindrom("111111100110"));
		assertEquals("minPalindrom(\"10010111101001110\")", 20, Palindrom.minPalindrom("10010111101001110"));
		assertEquals("minPalindrom(\"1111011100110100\")", 28, Palindrom.minPalindrom("1111011100110100"));
		assertEquals("minPalindrom(\"1111001111001111\")", 16, Palindrom.minPalindrom("1111001111001111"));
		assertEquals("minPalindrom(\"11011100101\")", 17, Palindrom.minPalindrom("11011100101"));
		assertEquals("minPalindrom(\"111001101111110\")", 22, Palindrom.minPalindrom("111001101111110"));
		assertEquals("minPalindrom(\"10010101110000111\")", 24, Palindrom.minPalindrom("10010101110000111"));
		assertEquals("minPalindrom(\"10111011001100\")", 21, Palindrom.minPalindrom("10111011001100"));
		assertEquals("minPalindrom(\"100001101011100\")", 24, Palindrom.minPalindrom("100001101011100"));
		assertEquals("minPalindrom(\"1001101001010100\")", 23, Palindrom.minPalindrom("1001101001010100"));
		assertEquals("minPalindrom(\"10111000001001000\")", 24, Palindrom.minPalindrom("10111000001001000"));
		assertEquals("minPalindrom(\"1001111000010110\")", 28, Palindrom.minPalindrom("1001111000010110"));
		assertEquals("minPalindrom(\"1011100111001101\")", 29, Palindrom.minPalindrom("1011100111001101"));
		assertEquals("minPalindrom(\"10111110101101111\")", 25, Palindrom.minPalindrom("10111110101101111"));
		assertEquals("minPalindrom(\"10010100001110111\")", 27, Palindrom.minPalindrom("10010100001110111"));
		assertEquals("minPalindrom(\"111010010100111\")", 27, Palindrom.minPalindrom("111010010100111"));
		assertEquals("minPalindrom(\"1101011110001101\")", 25, Palindrom.minPalindrom("1101011110001101"));
		assertEquals("minPalindrom(\"1000000011001000\")", 23, Palindrom.minPalindrom("1000000011001000"));
		assertEquals("minPalindrom(\"1010011001100010\")", 29, Palindrom.minPalindrom("1010011001100010"));
		assertEquals("minPalindrom(\"10101001011100111\")", 26, Palindrom.minPalindrom("10101001011100111"));
		assertEquals("minPalindrom(\"11100101011000\")", 25, Palindrom.minPalindrom("11100101011000"));
		assertEquals("minPalindrom(\"1100101000100\")", 21, Palindrom.minPalindrom("1100101000100"));
		assertEquals("minPalindrom(\"110011000010\")", 18, Palindrom.minPalindrom("110011000010"));
		assertEquals("minPalindrom(\"10011000010000111\")", 30, Palindrom.minPalindrom("10011000010000111"));
		assertEquals("minPalindrom(\"1110110101000101\")", 23, Palindrom.minPalindrom("1110110101000101"));
		assertEquals("minPalindrom(\"1100001010011001\")", 24, Palindrom.minPalindrom("1100001010011001"));
		assertEquals("minPalindrom(\"10010000010011110\")", 21, Palindrom.minPalindrom("10010000010011110"));
		assertEquals("minPalindrom(\"1101110010011110\")", 26, Palindrom.minPalindrom("1101110010011110"));
		assertEquals("minPalindrom(\"1110000010110100\")", 22, Palindrom.minPalindrom("1110000010110100"));
		assertEquals("minPalindrom(\"110001010111010\")", 21, Palindrom.minPalindrom("110001010111010"));
		assertEquals("minPalindrom(\"111111110101101\")", 22, Palindrom.minPalindrom("111111110101101"));
		assertEquals("minPalindrom(\"11101111110\")", 14, Palindrom.minPalindrom("11101111110"));
		assertEquals("minPalindrom(\"10010101001000011\")", 23, Palindrom.minPalindrom("10010101001000011"));
		assertEquals("minPalindrom(\"10011000001\")", 15, Palindrom.minPalindrom("10011000001"));
		assertEquals("minPalindrom(\"1100010111111010\")", 20, Palindrom.minPalindrom("1100010111111010"));
		assertEquals("minPalindrom(\"10000001001110010\")", 23, Palindrom.minPalindrom("10000001001110010"));
		assertEquals("minPalindrom(\"1101110110000000\")", 23, Palindrom.minPalindrom("1101110110000000"));
		assertEquals("minPalindrom(\"1010000111111000\")", 20, Palindrom.minPalindrom("1010000111111000"));
		assertEquals("minPalindrom(\"1100100010000000\")", 25, Palindrom.minPalindrom("1100100010000000"));
		assertEquals("minPalindrom(\"10101101001110110\")", 29, Palindrom.minPalindrom("10101101001110110"));
		assertEquals("minPalindrom(\"11001100111001\")", 18, Palindrom.minPalindrom("11001100111001"));
		assertEquals("minPalindrom(\"1110011101000101\")", 23, Palindrom.minPalindrom("1110011101000101"));
		assertEquals("minPalindrom(\"11110110100\")", 18, Palindrom.minPalindrom("11110110100"));
		assertEquals("minPalindrom(\"1010001101110011\")", 26, Palindrom.minPalindrom("1010001101110011"));
		assertEquals("minPalindrom(\"1100101001001111\")", 28, Palindrom.minPalindrom("1100101001001111"));
		assertEquals("minPalindrom(\"10010010110101111\")", 27, Palindrom.minPalindrom("10010010110101111"));
		assertEquals("minPalindrom(\"10111001000100010\")", 23, Palindrom.minPalindrom("10111001000100010"));
		assertEquals("minPalindrom(\"1111011101110110\")", 28, Palindrom.minPalindrom("1111011101110110"));
		assertEquals("minPalindrom(\"1000111101001\")", 21, Palindrom.minPalindrom("1000111101001"));
		assertEquals("minPalindrom(\"1000110110010001\")", 27, Palindrom.minPalindrom("1000110110010001"));
		assertEquals("minPalindrom(\"1111101010000\")", 21, Palindrom.minPalindrom("1111101010000"));
		assertEquals("minPalindrom(\"10010010111001011\")", 27, Palindrom.minPalindrom("10010010111001011"));
		assertEquals("minPalindrom(\"10001101010000101\")", 24, Palindrom.minPalindrom("10001101010000101"));
		assertEquals("minPalindrom(\"10101101111111010\")", 29, Palindrom.minPalindrom("10101101111111010"));
		assertEquals("minPalindrom(\"10111100010011111\")", 29, Palindrom.minPalindrom("10111100010011111"));
		assertEquals("minPalindrom(\"10001000111111011\")", 25, Palindrom.minPalindrom("10001000111111011"));
		assertEquals("minPalindrom(\"110000110001001\")", 22, Palindrom.minPalindrom("110000110001001"));
		assertEquals("minPalindrom(\"11111101\")", 10, Palindrom.minPalindrom("11111101"));
		assertEquals("minPalindrom(\"1110111111101111\")", 17, Palindrom.minPalindrom("1110111111101111"));
		assertEquals("minPalindrom(\"10111000110011111\")", 29, Palindrom.minPalindrom("10111000110011111"));
		assertEquals("minPalindrom(\"1010001001011000\")", 29, Palindrom.minPalindrom("1010001001011000"));
		assertEquals("minPalindrom(\"10011011001111100\")", 23, Palindrom.minPalindrom("10011011001111100"));
		assertEquals("minPalindrom(\"100111100000010\")", 26, Palindrom.minPalindrom("100111100000010"));
		assertEquals("minPalindrom(\"1010111001000000\")", 26, Palindrom.minPalindrom("1010111001000000"));
		assertEquals("minPalindrom(\"101111000000000\")", 21, Palindrom.minPalindrom("101111000000000"));
		assertEquals("minPalindrom(\"101001001001101\")", 27, Palindrom.minPalindrom("101001001001101"));
		assertEquals("minPalindrom(\"10101100000011001\")", 29, Palindrom.minPalindrom("10101100000011001"));
		assertEquals("minPalindrom(\"100110100001101\")", 26, Palindrom.minPalindrom("100110100001101"));
		assertEquals("minPalindrom(\"1100100101111\")", 22, Palindrom.minPalindrom("1100100101111"));
		assertEquals("minPalindrom(\"111100110\")", 14, Palindrom.minPalindrom("111100110"));
		assertEquals("minPalindrom(\"1110010011010\")", 23, Palindrom.minPalindrom("1110010011010"));
		assertEquals("minPalindrom(\"1110101100011000\")", 24, Palindrom.minPalindrom("1110101100011000"));
		assertEquals("minPalindrom(\"10110111011000110\")", 25, Palindrom.minPalindrom("10110111011000110"));
		assertEquals("minPalindrom(\"10001110011101010\")", 29, Palindrom.minPalindrom("10001110011101010"));
		assertEquals("minPalindrom(\"100111000110011\")", 24, Palindrom.minPalindrom("100111000110011"));
		assertEquals("minPalindrom(\"11101110101110\")", 17, Palindrom.minPalindrom("11101110101110"));
		assertEquals("minPalindrom(\"110110100110\")", 19, Palindrom.minPalindrom("110110100110"));
		assertEquals("minPalindrom(\"10110101100010000\")", 28, Palindrom.minPalindrom("10110101100010000"));
		assertEquals("minPalindrom(\"10001010100111001\")", 25, Palindrom.minPalindrom("10001010100111001"));
		assertEquals("minPalindrom(\"10001010010110000\")", 29, Palindrom.minPalindrom("10001010010110000"));
		assertEquals("minPalindrom(\"10000111\")", 10, Palindrom.minPalindrom("10000111"));
		assertEquals("minPalindrom(\"11101111101100\")", 21, Palindrom.minPalindrom("11101111101100"));
		assertEquals("minPalindrom(\"10011111010101001\")", 30, Palindrom.minPalindrom("10011111010101001"));
		assertEquals("minPalindrom(\"10110011110110010\")", 31, Palindrom.minPalindrom("10110011110110010"));
		assertEquals("minPalindrom(\"10000010100101000\")", 20, Palindrom.minPalindrom("10000010100101000"));
		assertEquals("minPalindrom(\"10101111011111100\")", 29, Palindrom.minPalindrom("10101111011111100"));
		assertEquals("minPalindrom(\"10011110011101111\")", 24, Palindrom.minPalindrom("10011110011101111"));
		assertEquals("minPalindrom(\"10101011010010000\")", 27, Palindrom.minPalindrom("10101011010010000"));
		assertEquals("minPalindrom(\"1110001000000\")", 20, Palindrom.minPalindrom("1110001000000"));
		assertEquals("minPalindrom(\"1110000000110001\")", 27, Palindrom.minPalindrom("1110000000110001"));
		assertEquals("minPalindrom(\"1000100011100101\")", 23, Palindrom.minPalindrom("1000100011100101"));	
		//scoring.updateScore("lang:common_list_test_scoring_name", 3);		
	}
}
